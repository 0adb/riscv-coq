(* File generated by ./src/riscv/Utility/make_InstructionNotations.py, do not edit *)
Require Export riscv.Spec.Decode.
Require Export riscv.Utility.InstructionCoercions.
Require Export riscv.Utility.RegisterNameNotations.

Notation "'RISCV:' x y .. z" :=
  (@cons Instruction x (@cons Instruction y .. (@cons Instruction z nil) ..))
  (at level 10, format "'RISCV:' x y .. z '//'").

Notation "'mulw' rd , rs1 , rs2" := (Mulw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'mulw'     rd ,  rs1 ,  rs2").
Notation "'divw' rd , rs1 , rs2" := (Divw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'divw'     rd ,  rs1 ,  rs2").
Notation "'divuw' rd , rs1 , rs2" := (Divuw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'divuw'    rd ,  rs1 ,  rs2").
Notation "'remw' rd , rs1 , rs2" := (Remw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'remw'     rd ,  rs1 ,  rs2").
Notation "'remuw' rd , rs1 , rs2" := (Remuw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'remuw'    rd ,  rs1 ,  rs2").
Notation "'mul' rd , rs1 , rs2" := (Mul rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'mul'      rd ,  rs1 ,  rs2").
Notation "'mulh' rd , rs1 , rs2" := (Mulh rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'mulh'     rd ,  rs1 ,  rs2").
Notation "'mulhsu' rd , rs1 , rs2" := (Mulhsu rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'mulhsu'   rd ,  rs1 ,  rs2").
Notation "'mulhu' rd , rs1 , rs2" := (Mulhu rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'mulhu'    rd ,  rs1 ,  rs2").
Notation "'div' rd , rs1 , rs2" := (Div rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'div'      rd ,  rs1 ,  rs2").
Notation "'divu' rd , rs1 , rs2" := (Divu rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'divu'     rd ,  rs1 ,  rs2").
Notation "'rem' rd , rs1 , rs2" := (Rem rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'rem'      rd ,  rs1 ,  rs2").
Notation "'remu' rd , rs1 , rs2" := (Remu rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'remu'     rd ,  rs1 ,  rs2").
Notation "'ld' rd , rs1 , oimm12" := (Ld rd rs1 oimm12)
  (at level 10, rd custom register_name, rs1 custom register_name, oimm12 constr at level 35,
   format "'//'     'ld'       rd ,  rs1 ,  oimm12").
Notation "'lwu' rd , rs1 , oimm12" := (Lwu rd rs1 oimm12)
  (at level 10, rd custom register_name, rs1 custom register_name, oimm12 constr at level 35,
   format "'//'     'lwu'      rd ,  rs1 ,  oimm12").
Notation "'addiw' rd , rs1 , imm12" := (Addiw rd rs1 imm12)
  (at level 10, rd custom register_name, rs1 custom register_name, imm12 constr at level 35,
   format "'//'     'addiw'    rd ,  rs1 ,  imm12").
Notation "'slliw' rd , rs1 , shamt5" := (Slliw rd rs1 shamt5)
  (at level 10, rd custom register_name, rs1 custom register_name, shamt5 constr at level 35,
   format "'//'     'slliw'    rd ,  rs1 ,  shamt5").
Notation "'srliw' rd , rs1 , shamt5" := (Srliw rd rs1 shamt5)
  (at level 10, rd custom register_name, rs1 custom register_name, shamt5 constr at level 35,
   format "'//'     'srliw'    rd ,  rs1 ,  shamt5").
Notation "'sraiw' rd , rs1 , shamt5" := (Sraiw rd rs1 shamt5)
  (at level 10, rd custom register_name, rs1 custom register_name, shamt5 constr at level 35,
   format "'//'     'sraiw'    rd ,  rs1 ,  shamt5").
Notation "'sd' rs1 , rs2 , simm12" := (Sd rs1 rs2 simm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, simm12 constr at level 35,
   format "'//'     'sd'       rs1 ,  rs2 ,  simm12").
Notation "'addw' rd , rs1 , rs2" := (Addw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'addw'     rd ,  rs1 ,  rs2").
Notation "'subw' rd , rs1 , rs2" := (Subw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'subw'     rd ,  rs1 ,  rs2").
Notation "'sllw' rd , rs1 , rs2" := (Sllw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'sllw'     rd ,  rs1 ,  rs2").
Notation "'srlw' rd , rs1 , rs2" := (Srlw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'srlw'     rd ,  rs1 ,  rs2").
Notation "'sraw' rd , rs1 , rs2" := (Sraw rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'sraw'     rd ,  rs1 ,  rs2").
Notation "'lb' rd , rs1 , oimm12" := (Lb rd rs1 oimm12)
  (at level 10, rd custom register_name, rs1 custom register_name, oimm12 constr at level 35,
   format "'//'     'lb'       rd ,  rs1 ,  oimm12").
Notation "'lh' rd , rs1 , oimm12" := (Lh rd rs1 oimm12)
  (at level 10, rd custom register_name, rs1 custom register_name, oimm12 constr at level 35,
   format "'//'     'lh'       rd ,  rs1 ,  oimm12").
Notation "'lw' rd , rs1 , oimm12" := (Lw rd rs1 oimm12)
  (at level 10, rd custom register_name, rs1 custom register_name, oimm12 constr at level 35,
   format "'//'     'lw'       rd ,  rs1 ,  oimm12").
Notation "'lbu' rd , rs1 , oimm12" := (Lbu rd rs1 oimm12)
  (at level 10, rd custom register_name, rs1 custom register_name, oimm12 constr at level 35,
   format "'//'     'lbu'      rd ,  rs1 ,  oimm12").
Notation "'lhu' rd , rs1 , oimm12" := (Lhu rd rs1 oimm12)
  (at level 10, rd custom register_name, rs1 custom register_name, oimm12 constr at level 35,
   format "'//'     'lhu'      rd ,  rs1 ,  oimm12").
Notation "'fence' pred , succ" := (Fence pred succ)
  (at level 10, pred constr at level 35, succ constr at level 35,
   format "'//'     'fence'    pred ,  succ").
Notation "'fence_i'" := Fence_i (at level 10, format "'//'     'fence_i'").
Notation "'addi' rd , rs1 , imm12" := (Addi rd rs1 imm12)
  (at level 10, rd custom register_name, rs1 custom register_name, imm12 constr at level 35,
   format "'//'     'addi'     rd ,  rs1 ,  imm12").
Notation "'slli' rd , rs1 , shamt6" := (Slli rd rs1 shamt6)
  (at level 10, rd custom register_name, rs1 custom register_name, shamt6 constr at level 35,
   format "'//'     'slli'     rd ,  rs1 ,  shamt6").
Notation "'slti' rd , rs1 , imm12" := (Slti rd rs1 imm12)
  (at level 10, rd custom register_name, rs1 custom register_name, imm12 constr at level 35,
   format "'//'     'slti'     rd ,  rs1 ,  imm12").
Notation "'sltiu' rd , rs1 , imm12" := (Sltiu rd rs1 imm12)
  (at level 10, rd custom register_name, rs1 custom register_name, imm12 constr at level 35,
   format "'//'     'sltiu'    rd ,  rs1 ,  imm12").
Notation "'xori' rd , rs1 , imm12" := (Xori rd rs1 imm12)
  (at level 10, rd custom register_name, rs1 custom register_name, imm12 constr at level 35,
   format "'//'     'xori'     rd ,  rs1 ,  imm12").
Notation "'ori' rd , rs1 , imm12" := (Ori rd rs1 imm12)
  (at level 10, rd custom register_name, rs1 custom register_name, imm12 constr at level 35,
   format "'//'     'ori'      rd ,  rs1 ,  imm12").
Notation "'andi' rd , rs1 , imm12" := (Andi rd rs1 imm12)
  (at level 10, rd custom register_name, rs1 custom register_name, imm12 constr at level 35,
   format "'//'     'andi'     rd ,  rs1 ,  imm12").
Notation "'srli' rd , rs1 , shamt6" := (Srli rd rs1 shamt6)
  (at level 10, rd custom register_name, rs1 custom register_name, shamt6 constr at level 35,
   format "'//'     'srli'     rd ,  rs1 ,  shamt6").
Notation "'srai' rd , rs1 , shamt6" := (Srai rd rs1 shamt6)
  (at level 10, rd custom register_name, rs1 custom register_name, shamt6 constr at level 35,
   format "'//'     'srai'     rd ,  rs1 ,  shamt6").
Notation "'auipc' rd , oimm20" := (Auipc rd oimm20)
  (at level 10, rd custom register_name, oimm20 constr at level 35,
   format "'//'     'auipc'    rd ,  oimm20").
Notation "'sb' rs1 , rs2 , simm12" := (Sb rs1 rs2 simm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, simm12 constr at level 35,
   format "'//'     'sb'       rs1 ,  rs2 ,  simm12").
Notation "'sh' rs1 , rs2 , simm12" := (Sh rs1 rs2 simm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, simm12 constr at level 35,
   format "'//'     'sh'       rs1 ,  rs2 ,  simm12").
Notation "'sw' rs1 , rs2 , simm12" := (Sw rs1 rs2 simm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, simm12 constr at level 35,
   format "'//'     'sw'       rs1 ,  rs2 ,  simm12").
Notation "'add' rd , rs1 , rs2" := (Add rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'add'      rd ,  rs1 ,  rs2").
Notation "'sub' rd , rs1 , rs2" := (Sub rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'sub'      rd ,  rs1 ,  rs2").
Notation "'sll' rd , rs1 , rs2" := (Sll rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'sll'      rd ,  rs1 ,  rs2").
Notation "'slt' rd , rs1 , rs2" := (Slt rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'slt'      rd ,  rs1 ,  rs2").
Notation "'sltu' rd , rs1 , rs2" := (Sltu rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'sltu'     rd ,  rs1 ,  rs2").
Notation "'xor' rd , rs1 , rs2" := (Xor rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'xor'      rd ,  rs1 ,  rs2").
Notation "'srl' rd , rs1 , rs2" := (Srl rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'srl'      rd ,  rs1 ,  rs2").
Notation "'sra' rd , rs1 , rs2" := (Sra rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'sra'      rd ,  rs1 ,  rs2").
Notation "'or' rd , rs1 , rs2" := (Or rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'or'       rd ,  rs1 ,  rs2").
Notation "'and' rd , rs1 , rs2" := (And rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'and'      rd ,  rs1 ,  rs2").
Notation "'lui' rd , imm20" := (Lui rd imm20)
  (at level 10, rd custom register_name, imm20 constr at level 35,
   format "'//'     'lui'      rd ,  imm20").
Notation "'beq' rs1 , rs2 , sbimm12" := (Beq rs1 rs2 sbimm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, sbimm12 constr at level 35,
   format "'//'     'beq'      rs1 ,  rs2 ,  sbimm12").
Notation "'bne' rs1 , rs2 , sbimm12" := (Bne rs1 rs2 sbimm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, sbimm12 constr at level 35,
   format "'//'     'bne'      rs1 ,  rs2 ,  sbimm12").
Notation "'blt' rs1 , rs2 , sbimm12" := (Blt rs1 rs2 sbimm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, sbimm12 constr at level 35,
   format "'//'     'blt'      rs1 ,  rs2 ,  sbimm12").
Notation "'bge' rs1 , rs2 , sbimm12" := (Bge rs1 rs2 sbimm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, sbimm12 constr at level 35,
   format "'//'     'bge'      rs1 ,  rs2 ,  sbimm12").
Notation "'bltu' rs1 , rs2 , sbimm12" := (Bltu rs1 rs2 sbimm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, sbimm12 constr at level 35,
   format "'//'     'bltu'     rs1 ,  rs2 ,  sbimm12").
Notation "'bgeu' rs1 , rs2 , sbimm12" := (Bgeu rs1 rs2 sbimm12)
  (at level 10, rs1 custom register_name, rs2 custom register_name, sbimm12 constr at level 35,
   format "'//'     'bgeu'     rs1 ,  rs2 ,  sbimm12").
Notation "'jalr' rd , rs1 , oimm12" := (Jalr rd rs1 oimm12)
  (at level 10, rd custom register_name, rs1 custom register_name, oimm12 constr at level 35,
   format "'//'     'jalr'     rd ,  rs1 ,  oimm12").
Notation "'jal' rd , jimm20" := (Jal rd jimm20)
  (at level 10, rd custom register_name, jimm20 constr at level 35,
   format "'//'     'jal'      rd ,  jimm20").
Notation "'fcvt_l_s' rd , rs1 , rm" := (Fcvt_l_s rd rs1 rm)
  (at level 10, rd custom register_name, rs1 constr at level 35, rm constr at level 35,
   format "'//'     'fcvt_l_s'  rd ,  rs1 ,  rm").
Notation "'fcvt_lu_s' rd , rs1 , rm" := (Fcvt_lu_s rd rs1 rm)
  (at level 10, rd custom register_name, rs1 constr at level 35, rm constr at level 35,
   format "'//'     'fcvt_lu_s'  rd ,  rs1 ,  rm").
Notation "'fcvt_s_l' rd , rs1 , rm" := (Fcvt_s_l rd rs1 rm)
  (at level 10, rd constr at level 35, rs1 custom register_name, rm constr at level 35,
   format "'//'     'fcvt_s_l'  rd ,  rs1 ,  rm").
Notation "'fcvt_s_lu' rd , rs1 , rm" := (Fcvt_s_lu rd rs1 rm)
  (at level 10, rd constr at level 35, rs1 custom register_name, rm constr at level 35,
   format "'//'     'fcvt_s_lu'  rd ,  rs1 ,  rm").
Notation "'flw' rd , rs1 , oimm12" := (Flw rd rs1 oimm12)
  (at level 10, rd constr at level 35, rs1 custom register_name, oimm12 constr at level 35,
   format "'//'     'flw'      rd ,  rs1 ,  oimm12").
Notation "'fsw' rs1 , rs2 , simm12" := (Fsw rs1 rs2 simm12)
  (at level 10, rs1 custom register_name, rs2 constr at level 35, simm12 constr at level 35,
   format "'//'     'fsw'      rs1 ,  rs2 ,  simm12").
Notation "'fmadd_s' rd , rs1 , rs2 , rs3 , rm" := (Fmadd_s rd rs1 rs2 rs3 rm)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35, rs3 constr at level 35, rm constr at level 35,
   format "'//'     'fmadd_s'  rd ,  rs1 ,  rs2 ,  rs3 ,  rm").
Notation "'fmsub_s' rd , rs1 , rs2 , rs3 , rm" := (Fmsub_s rd rs1 rs2 rs3 rm)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35, rs3 constr at level 35, rm constr at level 35,
   format "'//'     'fmsub_s'  rd ,  rs1 ,  rs2 ,  rs3 ,  rm").
Notation "'fnmsub_s' rd , rs1 , rs2 , rs3 , rm" := (Fnmsub_s rd rs1 rs2 rs3 rm)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35, rs3 constr at level 35, rm constr at level 35,
   format "'//'     'fnmsub_s'  rd ,  rs1 ,  rs2 ,  rs3 ,  rm").
Notation "'fnmadd_s' rd , rs1 , rs2 , rs3 , rm" := (Fnmadd_s rd rs1 rs2 rs3 rm)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35, rs3 constr at level 35, rm constr at level 35,
   format "'//'     'fnmadd_s'  rd ,  rs1 ,  rs2 ,  rs3 ,  rm").
Notation "'fadd_s' rd , rs1 , rs2 , rm" := (Fadd_s rd rs1 rs2 rm)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35, rm constr at level 35,
   format "'//'     'fadd_s'   rd ,  rs1 ,  rs2 ,  rm").
Notation "'fsub_s' rd , rs1 , rs2 , rm" := (Fsub_s rd rs1 rs2 rm)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35, rm constr at level 35,
   format "'//'     'fsub_s'   rd ,  rs1 ,  rs2 ,  rm").
Notation "'fmul_s' rd , rs1 , rs2 , rm" := (Fmul_s rd rs1 rs2 rm)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35, rm constr at level 35,
   format "'//'     'fmul_s'   rd ,  rs1 ,  rs2 ,  rm").
Notation "'fdiv_s' rd , rs1 , rs2 , rm" := (Fdiv_s rd rs1 rs2 rm)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35, rm constr at level 35,
   format "'//'     'fdiv_s'   rd ,  rs1 ,  rs2 ,  rm").
Notation "'fsqrt_s' rd , rs1 , rm" := (Fsqrt_s rd rs1 rm)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rm constr at level 35,
   format "'//'     'fsqrt_s'  rd ,  rs1 ,  rm").
Notation "'fsgnj_s' rd , rs1 , rs2" := (Fsgnj_s rd rs1 rs2)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35,
   format "'//'     'fsgnj_s'  rd ,  rs1 ,  rs2").
Notation "'fsgnjn_s' rd , rs1 , rs2" := (Fsgnjn_s rd rs1 rs2)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35,
   format "'//'     'fsgnjn_s'  rd ,  rs1 ,  rs2").
Notation "'fsgnjx_s' rd , rs1 , rs2" := (Fsgnjx_s rd rs1 rs2)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35,
   format "'//'     'fsgnjx_s'  rd ,  rs1 ,  rs2").
Notation "'fmin_s' rd , rs1 , rs2" := (Fmin_s rd rs1 rs2)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35,
   format "'//'     'fmin_s'   rd ,  rs1 ,  rs2").
Notation "'fmax_s' rd , rs1 , rs2" := (Fmax_s rd rs1 rs2)
  (at level 10, rd constr at level 35, rs1 constr at level 35, rs2 constr at level 35,
   format "'//'     'fmax_s'   rd ,  rs1 ,  rs2").
Notation "'fcvt_w_s' rd , rs1 , rm" := (Fcvt_w_s rd rs1 rm)
  (at level 10, rd custom register_name, rs1 constr at level 35, rm constr at level 35,
   format "'//'     'fcvt_w_s'  rd ,  rs1 ,  rm").
Notation "'fcvt_wu_s' rd , rs1 , rm" := (Fcvt_wu_s rd rs1 rm)
  (at level 10, rd custom register_name, rs1 constr at level 35, rm constr at level 35,
   format "'//'     'fcvt_wu_s'  rd ,  rs1 ,  rm").
Notation "'fmv_x_w' rd , rs1" := (Fmv_x_w rd rs1)
  (at level 10, rd custom register_name, rs1 constr at level 35,
   format "'//'     'fmv_x_w'  rd ,  rs1").
Notation "'feq_s' rd , rs1 , rs2" := (Feq_s rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 constr at level 35, rs2 constr at level 35,
   format "'//'     'feq_s'    rd ,  rs1 ,  rs2").
Notation "'flt_s' rd , rs1 , rs2" := (Flt_s rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 constr at level 35, rs2 constr at level 35,
   format "'//'     'flt_s'    rd ,  rs1 ,  rs2").
Notation "'fle_s' rd , rs1 , rs2" := (Fle_s rd rs1 rs2)
  (at level 10, rd custom register_name, rs1 constr at level 35, rs2 constr at level 35,
   format "'//'     'fle_s'    rd ,  rs1 ,  rs2").
Notation "'fclass_s' rd , rs1" := (Fclass_s rd rs1)
  (at level 10, rd custom register_name, rs1 constr at level 35,
   format "'//'     'fclass_s'  rd ,  rs1").
Notation "'fcvt_s_w' rd , rs1 , rm" := (Fcvt_s_w rd rs1 rm)
  (at level 10, rd constr at level 35, rs1 custom register_name, rm constr at level 35,
   format "'//'     'fcvt_s_w'  rd ,  rs1 ,  rm").
Notation "'fcvt_s_wu' rd , rs1 , rm" := (Fcvt_s_wu rd rs1 rm)
  (at level 10, rd constr at level 35, rs1 custom register_name, rm constr at level 35,
   format "'//'     'fcvt_s_wu'  rd ,  rs1 ,  rm").
Notation "'fmv_w_x' rd , rs1" := (Fmv_w_x rd rs1)
  (at level 10, rd constr at level 35, rs1 custom register_name,
   format "'//'     'fmv_w_x'  rd ,  rs1").
Notation "'ecall'" := Ecall (at level 10, format "'//'     'ecall'").
Notation "'ebreak'" := Ebreak (at level 10, format "'//'     'ebreak'").
Notation "'uret'" := Uret (at level 10, format "'//'     'uret'").
Notation "'sret'" := Sret (at level 10, format "'//'     'sret'").
Notation "'mret'" := Mret (at level 10, format "'//'     'mret'").
Notation "'wfi'" := Wfi (at level 10, format "'//'     'wfi'").
Notation "'sfence_vma' rs1 , rs2" := (Sfence_vma rs1 rs2)
  (at level 10, rs1 custom register_name, rs2 custom register_name,
   format "'//'     'sfence_vma'  rs1 ,  rs2").
Notation "'csrrw' rd , rs1 , csr12" := (Csrrw rd rs1 csr12)
  (at level 10, rd custom register_name, rs1 custom register_name, csr12 constr at level 35,
   format "'//'     'csrrw'    rd ,  rs1 ,  csr12").
Notation "'csrrs' rd , rs1 , csr12" := (Csrrs rd rs1 csr12)
  (at level 10, rd custom register_name, rs1 custom register_name, csr12 constr at level 35,
   format "'//'     'csrrs'    rd ,  rs1 ,  csr12").
Notation "'csrrc' rd , rs1 , csr12" := (Csrrc rd rs1 csr12)
  (at level 10, rd custom register_name, rs1 custom register_name, csr12 constr at level 35,
   format "'//'     'csrrc'    rd ,  rs1 ,  csr12").
Notation "'csrrwi' rd , zimm , csr12" := (Csrrwi rd zimm csr12)
  (at level 10, rd custom register_name, zimm constr at level 35, csr12 constr at level 35,
   format "'//'     'csrrwi'   rd ,  zimm ,  csr12").
Notation "'csrrsi' rd , zimm , csr12" := (Csrrsi rd zimm csr12)
  (at level 10, rd custom register_name, zimm constr at level 35, csr12 constr at level 35,
   format "'//'     'csrrsi'   rd ,  zimm ,  csr12").
Notation "'csrrci' rd , zimm , csr12" := (Csrrci rd zimm csr12)
  (at level 10, rd custom register_name, zimm constr at level 35, csr12 constr at level 35,
   format "'//'     'csrrci'   rd ,  zimm ,  csr12").
Notation "'lr_d' rd , rs1 , aqrl" := (Lr_d rd rs1 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, aqrl constr at level 35,
   format "'//'     'lr_d'     rd ,  rs1 ,  aqrl").
Notation "'sc_d' rd , rs1 , rs2 , aqrl" := (Sc_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'sc_d'     rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoswap_d' rd , rs1 , rs2 , aqrl" := (Amoswap_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoswap_d'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoadd_d' rd , rs1 , rs2 , aqrl" := (Amoadd_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoadd_d'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoand_d' rd , rs1 , rs2 , aqrl" := (Amoand_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoand_d'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoor_d' rd , rs1 , rs2 , aqrl" := (Amoor_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoor_d'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoxor_d' rd , rs1 , rs2 , aqrl" := (Amoxor_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoxor_d'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amomax_d' rd , rs1 , rs2 , aqrl" := (Amomax_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amomax_d'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amomaxu_d' rd , rs1 , rs2 , aqrl" := (Amomaxu_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amomaxu_d'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amomin_d' rd , rs1 , rs2 , aqrl" := (Amomin_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amomin_d'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amominu_d' rd , rs1 , rs2 , aqrl" := (Amominu_d rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amominu_d'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'lr_w' rd , rs1 , aqrl" := (Lr_w rd rs1 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, aqrl constr at level 35,
   format "'//'     'lr_w'     rd ,  rs1 ,  aqrl").
Notation "'sc_w' rd , rs1 , rs2 , aqrl" := (Sc_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'sc_w'     rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoswap_w' rd , rs1 , rs2 , aqrl" := (Amoswap_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoswap_w'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoadd_w' rd , rs1 , rs2 , aqrl" := (Amoadd_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoadd_w'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoand_w' rd , rs1 , rs2 , aqrl" := (Amoand_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoand_w'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoor_w' rd , rs1 , rs2 , aqrl" := (Amoor_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoor_w'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amoxor_w' rd , rs1 , rs2 , aqrl" := (Amoxor_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amoxor_w'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amomax_w' rd , rs1 , rs2 , aqrl" := (Amomax_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amomax_w'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amomaxu_w' rd , rs1 , rs2 , aqrl" := (Amomaxu_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amomaxu_w'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amomin_w' rd , rs1 , rs2 , aqrl" := (Amomin_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amomin_w'  rd ,  rs1 ,  rs2 ,  aqrl").
Notation "'amominu_w' rd , rs1 , rs2 , aqrl" := (Amominu_w rd rs1 rs2 aqrl)
  (at level 10, rd custom register_name, rs1 custom register_name, rs2 custom register_name, aqrl constr at level 35,
   format "'//'     'amominu_w'  rd ,  rs1 ,  rs2 ,  aqrl").
