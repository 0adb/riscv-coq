// This C file was autogenerated from Coq
#include <stdbool.h>
#include <stdint.h>

void executeI64(RiscvState s, InstructionI64 inst) {
    switch (inst.kind) {
        case K_Ld: {
            t a = getRegister(rs1);
            t addr = translate(TODO(Program.Load), coq_ZToReg(h0, 0b1000), add(h0, a, coq_ZToReg(h0, oimm12)));
            t x = loadDouble(addr);
            setRegister(rd, int64ToReg(h0, x));
            break;
        }
        case K_Lwu: {
            t a = getRegister(rs1);
            t addr = translate(TODO(Program.Load), coq_ZToReg(h0, 0b100), add(h0, a, coq_ZToReg(h0, oimm12)));
            t x = loadWord(addr);
            setRegister(rd, uInt32ToReg(h0, x));
            break;
        }
        case K_Addiw: {
            t x = getRegister(rs1);
            setRegister(rd, s32(h0, add(h0, x, coq_ZToReg(h0, imm12))));
            break;
        }
        case K_Slliw: {
            t x = getRegister(rs1);
            setRegister(rd, s32(h0, sll(h0, x, shamt5)));
            break;
        }
        case K_Srliw: {
            t x = getRegister(rs1);
            setRegister(rd, s32(h0, srl(h0, u32(h0, x), shamt5)));
            break;
        }
        case K_Sraiw: {
            t x = getRegister(rs1);
            setRegister(rd, s32(h0, sra(h0, s32(h0, x), shamt5)));
            break;
        }
        case K_Sd: {
            t a = getRegister(rs1);
            t addr = translate(TODO(Program.Store), coq_ZToReg(h0, 0b1000), add(h0, a, coq_ZToReg(h0, simm12)));
            t x = getRegister(rs2);
            storeDouble(addr, regToInt64(h0, x));
            break;
        }
        case K_Addw: {
            t x = getRegister(rs1);
            t y = getRegister(rs2);
            setRegister(rd, s32(h0, add(h0, x, y)));
            break;
        }
        case K_Subw: {
            t x = getRegister(rs1);
            t y = getRegister(rs2);
            setRegister(rd, s32(h0, sub(h0, x, y)));
            break;
        }
        case K_Sllw: {
            t x = getRegister(rs1);
            t y = getRegister(rs2);
            setRegister(rd, s32(h0, sll(h0, x, regToShamt5(h0, y))));
            break;
        }
        case K_Srlw: {
            t x = getRegister(rs1);
            t y = getRegister(rs2);
            setRegister(rd, s32(h0, srl(h0, u32(h0, x), regToShamt5(h0, y))));
            break;
        }
        case K_Sraw: {
            t x = getRegister(rs1);
            t y = getRegister(rs2);
            setRegister(rd, s32(h0, sra(h0, s32(h0, x), regToShamt5(h0, y))));
            break;
        }
    }
}
